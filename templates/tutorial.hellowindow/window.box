{
  "_code_cookie" "{\"output\":\"\",\"history\":{\"done\":[{\"primIndex\":0,\"ranges\":[{\"head\":{\"ch\":0,\"line\":28,\"sticky\":null},\"anchor\":{\"ch\":0,\"line\":28,\"sticky\":null}}]},{\"primIndex\":0,\"ranges\":[{\"head\":{\"ch\":19,\"line\":35,\"sticky\":null},\"anchor\":{\"ch\":19,\"line\":35,\"sticky\":null}}]},{\"primIndex\":0,\"ranges\":[{\"head\":{\"ch\":0,\"line\":29,\"sticky\":null},\"anchor\":{\"ch\":0,\"line\":29,\"sticky\":null}}]},{\"changes\":[{\"from\":{\"ch\":0,\"line\":28,\"sticky\":null},\"to\":{\"ch\":0,\"line\":28,\"sticky\":null},\"text\":[\"\",\"\"]}]},{\"primIndex\":0,\"ranges\":[{\"head\":{\"ch\":0,\"line\":28,\"sticky\":null},\"anchor\":{\"ch\":0,\"line\":28,\"sticky\":null}}]},{\"primIndex\":0,\"ranges\":[{\"head\":{\"ch\":0,\"line\":10,\"xRel\":1,\"sticky\":\"before\"},\"anchor\":{\"ch\":0,\"line\":10,\"xRel\":1,\"sticky\":\"before\"}}]},{\"primIndex\":0,\"ranges\":[{\"head\":{\"ch\":0,\"line\":8,\"xRel\":1,\"sticky\":\"before\"},\"anchor\":{\"ch\":0,\"line\":8,\"xRel\":1,\"sticky\":\"before\"}}]},{\"primIndex\":0,\"ranges\":[{\"head\":{\"ch\":0,\"line\":10,\"xRel\":1,\"sticky\":\"before\"},\"anchor\":{\"ch\":0,\"line\":10,\"xRel\":1,\"sticky\":\"before\"}}]},{\"primIndex\":0,\"ranges\":[{\"head\":{\"ch\":0,\"line\":9,\"xRel\":1,\"sticky\":\"after\"},\"goalColumn\":4.995841979980469,\"anchor\":{\"ch\":0,\"line\":10,\"xRel\":1,\"sticky\":\"before\"}}]},{\"changes\":[{\"from\":{\"ch\":0,\"line\":9,\"sticky\":null},\"to\":{\"ch\":0,\"line\":9,\"sticky\":null},\"text\":[\"var GL11 = Java.type('org.lwjgl.opengl.GL11')\",\"\"]},{\"from\":{\"ch\":0,\"line\":8,\"sticky\":null},\"to\":{\"ch\":0,\"line\":8,\"sticky\":null},\"text\":[\"\",\"\"]},{\"from\":{\"ch\":22,\"line\":7,\"sticky\":null},\"to\":{\"ch\":22,\"line\":7,\"sticky\":null},\"text\":[\"\",\"\"]}]},{\"primIndex\":0,\"ranges\":[{\"head\":{\"ch\":22,\"line\":7,\"sticky\":null},\"anchor\":{\"ch\":22,\"line\":7,\"sticky\":null}}]},{\"changes\":[{\"from\":{\"ch\":22,\"line\":7,\"sticky\":null},\"to\":{\"ch\":0,\"line\":8,\"sticky\":null},\"text\":[\"\"]}]},{\"primIndex\":0,\"ranges\":[{\"head\":{\"ch\":0,\"line\":8,\"sticky\":null},\"anchor\":{\"ch\":0,\"line\":8,\"sticky\":null}}]},{\"primIndex\":0,\"ranges\":[{\"head\":{\"ch\":0,\"line\":2,\"xRel\":1,\"sticky\":\"before\"},\"anchor\":{\"ch\":0,\"line\":2,\"xRel\":1,\"sticky\":\"before\"}}]},{\"changes\":[{\"from\":{\"ch\":0,\"line\":2,\"sticky\":null},\"to\":{\"ch\":0,\"line\":3,\"sticky\":null},\"text\":[\"\"]}]},{\"primIndex\":0,\"ranges\":[{\"head\":{\"ch\":0,\"line\":3,\"sticky\":null},\"anchor\":{\"ch\":0,\"line\":3,\"sticky\":null}}]}],\"undone\":[]},\"currentpos\":{\"ch\":0,\"line\":3,\"sticky\":null},\"widgets\":[],\"brackets\":\"makePathForHandles(cmGetLineHandle(10, false), cmGetLineHandle(27, true), 0, undefined, 'undefined')\\nmakePathForHandles(cmGetLineHandle(40, false), cmGetLineHandle(40, true), 0, undefined, 'undefined')\\n\"}"
  "code" "var Camera = Java.type('field.graphics.Camera')\nvar FullScreenWindow = Java.type('field.graphics.FullScreenWindow')\nvar GL11 = Java.type('org.lwjgl.opengl.GL11')\n\n// builds a window that's 1024x1024 wide. Note, on a OS X retina screen this will have 2048x2048 pixels in it \nwindow = new FullScreenWindow(0,0,1024, 1024, \"Field window\")\n\n// exports the 'scene' of this window as _.scene so other boxes can talk about it\n_.scene = window.scene\n\n// attach a function to the scene in this box\n_.scene[-10].clear_viewport_first = () => {\n\t// that clears the background to a dark red\n\tGL11.glClearColor(0.2, 0.1, 0.1, 1)\t\n\t\n\t// turn on depth testing\n\tGL11.glDepthFunc(GL11.GL_LESS)\n\tGL11.glDisable(GL11.GL_DEPTH_TEST)\n\n\t// actual clear the viewport\n\tGL11.glClear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT)\n\t\n\t// return true to do this function every time this scene is drawn\n\treturn true\n}\n\n_.camera = new Camera()\n\nvar KeyboardCamera = Java.type('field.graphics.util.KeyboardCamera')\n\n// attach a keyboard control to the viewport's camera (this will also only work when the box is selected)\nkc = new KeyboardCamera(_.camera, window)\n\n// set up a standard set of keys for controlling the camera:\n// shift-arrow keys orbit the camera left/right and in/out, shift-pg-up / down orbits up and down\n// non-shift keys move the camera target as well\nkc.standardMap()\n\n\n// and, just for readibility, let's call this box 'viewport'\n_.name = \"window\"\n"
  "__id__" "_8b3d4177_b246_4dd1_a2fa_3e2bb74e4b0c"
  "__datafilename__" "{{templates}}/tutorial.hellowindow/window.box"
  "name" "window"
  "frame" #field/rect{
    :x 247.53125
    :y 159.6171875
    :w 100.0
    :h 100.0
  }
  "__filename__code" "{{templates}}/tutorial.hellowindow/window.box.js"
  "__boxclass__" "fieldbox.boxes.Box"
}
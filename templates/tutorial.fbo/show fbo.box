{
  "code" "var MeshBuilder = Java.type('field.graphics.MeshBuilder')\nvar BaseMesh = Java.type('field.graphics.BaseMesh')\n\n// we'll need a shader\nshader = _.newShader()\n\n// and a mesh (which will start with 0 triangles and 0 vertices)\nmesh = BaseMesh.triangleList(0,0)\n\n// and a way of changing its content\nbuilder = mesh.builder()\n\n\n// connect the mesh to the shader\nshader.myMesh = mesh\n\n// and the shader to the scene\n_.scene.shader = shader\n\n// and other boxes might be interested in the builder and the mesh\n_.mesh = mesh\n_.builder = builder\n\n\nbuilder.open()\nbuilder.v(0,0,0)\nbuilder.v(1,0,0)\nbuilder.v(1,1,0)\nbuilder.v(0,1,0)\nbuilder.e(0,1,2) \nbuilder.e(0,2,3) \nbuilder.close()\n\n\nshader.t = _.fbo\n_.fbo"
  "vertex" "#version 410\nlayout(location=0) in vec3 position;\nlayout(location=1) in vec4 s_Color;\n\nout vec2 t;\n\nvoid main()\n{\n\tgl_Position = ( vec4(position.xy*2-1, 0.5, 1.0));\n\tt = position.xy;\n}"
  "__filename__vertex" "{{templates}}/tutorial.fbo/show fbo.box.glslv"
  "fragment" "#version 410\n\nlayout(location=0) out vec4 _output;\n\nuniform sampler2D t1;\n\nin vec2 t;\n\nvoid main()\n{\n\tvec4 c = texture(t1, t);\t\n\t\n\t_output  = vec4(c.xyz,1);\n}"
  "__id__" "_2b245738_6508_4c81_88b5_56a1eeef4c7b"
  "__datafilename__" "{{templates}}/tutorial.fbo/show fbo.box"
  "__filename__geometry" "{{templates}}/tutorial.fbo/show fbo.box.glslg"
  "geometry" ""
  "name" "show fbo"
  "__filename__code" "{{templates}}/tutorial.fbo/show fbo.box.js"
  "frame" #field/rect{
    :x 1118.7265625
    :y 268.6031188964844
    :w 100.0
    :h 100.0
  }
  "__filename__fragment" "{{templates}}/tutorial.fbo/show fbo.box.glslf"
  "__boxclass__" "fieldbox.boxes.Box"
}